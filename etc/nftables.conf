#!/usr/sbin/nft -f

flush ruleset

define wan = eth0
define vpn = wg0

table inet firewall {
  set tcp_accepted {
    type inet_service; flags interval;
    elements = { 22, 80, 443 }
  }

  set udp_accepted {
    type inet_service; flags interval;
    elements = { 53, 443 }
  }

  set vpn_tcp_accepted {
    type inet_service; flags interval;
    elements = { 4242 }
  }

  chain incoming {
    type filter hook input priority 0; policy drop;

    ct state invalid drop

    tcp flags & (fin|syn|rst|ack) != syn ct state new counter drop

    ip protocol icmp icmp type echo-request limit rate over 1/second burst 5 packets drop
    ip6 nexthdr icmpv6 icmpv6 type echo-request limit rate over 1/second burst 5 packets drop

    ct state established,related accept

    iif lo accept

    ip protocol icmp icmp type { destination-unreachable, echo-reply, echo-request, source-quench, time-exceeded } accept
    ip6 nexthdr icmpv6 icmpv6 type { destination-unreachable, echo-reply, echo-request, nd-neighbor-solicit,  nd-router-advert, nd-neighbor-advert, packet-too-big, parameter-problem, time-exceeded } accept

    iifname $wan tcp dport @tcp_accepted ct state new accept
    iifname $wan udp dport @udp_accepted ct state new accept
    iifname $vpn tcp dport @tcp_accepted ct state new accept
    iifname $vpn udp dport @tcp_accepted ct state new accept
    iifname $vpn tcp dport @vpn_tcp_accepted ct state new accept
  }

  chain forwarding {
    type filter hook forward priority 0; policy drop;

    ct state invalid drop

    ct state established,related accept

  }

  chain outgoing {
    type filter hook output priority 0; policy drop;

    ct state invalid drop

    # For some reason ipv6 ICMP needs to be explicitly allowed here.
    ip6 nexthdr ipv6-icmp accept
    ct state new,established,related accept
  }
}

table inet router {
  chain prerouting {
    type nat hook prerouting priority -100;
  }

  chain postrouting {
    type nat hook postrouting priority 100;

  }
}

table netdev filter {
  set blocklist_v4 {
    type ipv4_addr; flags interval;
    elements = {
      172.16.254.1,172.16.254.2
    }
  }

  chain ingress {
    # For some reason the interface must be hardcoded here, variable do not work.
    type filter hook ingress device eth0 priority -500;

    # Drop all fragments.
    ip frag-off & 0x1fff != 0 counter drop

    # Drop bad addresses.
    ip saddr @blocklist_v4 counter drop

    # Drop XMAS packets.
    tcp flags & (fin|syn|rst|psh|ack|urg) == fin|syn|rst|psh|ack|urg counter drop

    # Drop NULL packets.
    tcp flags & (fin|syn|rst|psh|ack|urg) == 0x0 counter drop

    # Drop uncommon MSS values.
    tcp flags syn tcp option maxseg size 1-535 counter drop
  }
}
